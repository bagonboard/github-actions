name: Make the release
on:
  workflow_call:
    secrets:
      GA_TOKEN:
        required: true
      SENTRY_AUTH_TOKEN:
        required: false      
    inputs:
      SENTRY_ORG:
        required: false
        type: string
      SENTRY_PROJECT:
        required: false
        type: string
      ENVIRONMENT:
        required: false
        type: string

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - uses: actions/setup-node@v2
      
      - name: Run release server
        run: npm run release
        env:
          DEBUG: "*"
          NPM_CONFIG_LOGLEVEL: verbose
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}

      - name: Merge master into preproduction
        uses: everlytic/branch-merge@1.1.0
        with:
          github_token: ${{ secrets.GA_TOKEN }}
          source_ref: 'master'
          target_branch: 'preproduction'
          commit_message_template: 'merge changes from master [skip ci]'
          
      - name: Merge master into develop
        uses: everlytic/branch-merge@1.1.0
        with:
          github_token: ${{ secrets.GA_TOKEN }}
          source_ref: 'master'
          target_branch: 'develop'
          commit_message_template: 'merge changes from master [skip ci]'

      - name: Get version from package.json
        id: package
        run: |
          version=`jq -r ".version" package.json`
          echo "::set-output name=version::$version"          

      - name: Create Sentry release
        if: ${{ inputs.SENTRY_PROJECT != '' }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ inputs.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ inputs.SENTRY_PROJECT }}
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          version: ${{ steps.package.outputs.version }}


