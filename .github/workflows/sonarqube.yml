name: Sonarqube
on:
  workflow_call:
    secrets:
      SONARQUBE_HOST:
        required: true
      SONARQUBE_TOKEN:
        required: true
    inputs:
      PROJECT_NAME:
        required: true
        type: string
jobs:
  sonarQubeTrigger:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  

      - name: Cache lcov file
        uses: actions/cache@v2
        with:
          path: coverage/lcov.info        
          key: ${{ runner.os }}-${{ inputs.PROJECT_NAME }}-lcov-${{ github.run_number }}

      - name: fix code coverage paths
        run: |
          [ -f coverage/lcov.info ] && sed -i 's/\/home\/runner\/work\/${{ inputs.PROJECT_NAME }}\/${{ inputs.PROJECT_NAME }}\//\/github\/workspace\//g' coverage/lcov.info || echo "Not found"

      - name: SonarQube Scan
        uses: ddoice/sonarqube-simple@v1.2.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}

      - name: SonarQube Quality Gate check    
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}