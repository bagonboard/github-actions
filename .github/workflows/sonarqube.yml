name: Sonarqube
on:
  workflow_call:
    secrets:
      SONARQUBE_HOST:
        required: true
      SONARQUBE_TOKEN:
        required: true
    inputs:
      PROJECT_NAME:
        required: true
        type: string
jobs:
  sonarQubeTrigger:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: Cache lcov file
        uses: actions/cache@v2
        with:
          path: coverage/lcov.info        
          key: ${{ runner.os }}-${{ inputs.PROJECT_NAME }}-lcov-${{ github.run_number }}

      - name: Set PROJECT_NAME_UPPERCASE env
        run: echo "PROJECT_NAME_UPPERCASE=$(echo $PROJECT_NAME | tr a-z A-Z)" >> $GITHUB_ENV
        env:
          PROJECT_NAME: ${{ inputs.PROJECT_NAME }}

      - name: Scan code
        uses: vtex/action-sonarqube@main
        with:
          githubToken: ${{ github.token }}
          host: ${{ secrets.SONARQUBE_HOST }}
          token: ${{ secrets.SONARQUBE_TOKEN }}
          projectKey: ${{ inputs.PROJECT_NAME }}
          projectName: ${{ inputs.PROJECT_NAME_UPPERCASE }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}