name: 'turbo-action'
description: 'Execute turbo script with cache-and-clean process'
inputs:
  workflow:
    required: true
  name:
    required: true
  script:
    required: true
  token:
    required: true
  pre-script:
    required: false
  script-block-scalar:
    required: false
    type: choice
    default: |
    options:
    - |
    - >

runs:
  using: "composite"
  steps:
    - name: Download TurboRepo cache
      uses: dawidd6/action-download-artifact@v2
      continue-on-error: true
      with:
        workflow: ${{ inputs.workflow }}
        github_token: ${{ inputs.token }}
        name: ${{ inputs.name }}
        path: ./cache

    - name: Run turbo script inline
      if: inputs.script-block-scalar == '>'
      env:
        TURBO_SCRIPT: ${{ inputs.script }}
        PRE_SCRIPT: ${{ inputs.pre-script }}
        SCRIPT_BLOCK_SCALAR: ${{ inputs.script-block-scalar }}
      shell: bash
      run: ${{ inputs.PRE_SCRIPT }} yarn run $TURBO_SCRIPT --cache-dir=./cache

    - name: Run turbo script multiline
      if: inputs.script-block-scalar == '|'
      shell: bash
      env:
        TURBO_SCRIPT: ${{ inputs.script }}
        PRE_SCRIPT: ${{ inputs.pre-script }}
        SCRIPT_BLOCK_SCALAR: ${{ inputs.script-block-scalar }}
      run: |
        echo SCRIPT_BLOCK_SCALAR:$SCRIPT_BLOCK_SCALAR
        $PRE_SCRIPT
        yarn run $TURBO_SCRIPT --cache-dir=./cache

    - name: Clean turbo cache
      shell: bash
      env:
        TURBO_SCRIPT: ${{ inputs.script }}
      run: |
        mkdir ./cache-clean
        hashes=$(yarn run $TURBO_SCRIPT --dry-run=json | sed -e '/^Done /d;1,2d' | jq '.tasks | .[].hash' | tr -d '"')

        for hash in ${hashes[@]}; do
          echo $hash
          cp -R ./cache/*${hash}* ./cache-clean 2>/dev/null || :
        done

    - name: Upload TurboRepo cache
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.name }}
        path: ./cache-clean

